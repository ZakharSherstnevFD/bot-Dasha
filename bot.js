const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');

const token = '7128520234:AAExMV_jnbnIsn4lVml9wu2ukkB1_4iaIIQ';
const bot = new TelegramBot(token, { polling: true });

// –£–∫–∞–∂–∏—Ç–µ –≤–∞—à chatId –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π
const adminChatId = '-1002381258611';

// –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userStates = {};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å
async function getUserProfile(userId) {
    try {
        const user = await bot.getChat(userId);
        const userName = user.first_name + (user.last_name ? ` ${user.last_name}` : '');
        const userLink = user.username ? `https://t.me/${user.username}` : `tg://user?id=${userId}`;
        return { userName, userLink };
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', error);
        return { userName: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', userLink: '#' };
    }
}

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;

    const welcomeMessage = `üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±—Ä–æ–≤–∏—Å—Ç –î–∞—à–∞, —Ä–∞–¥–∞ –≤–∞—Å –≤–∏–¥–µ—Ç—å –≤ –Ω–∞—à–µ–º —É—é—Ç–Ω–æ–º —Å–∞–ª–æ–Ω–µ. üåø
–ù–∞–∂–∏–º–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è" –∏ –≤—ã–±–∏—Ä–∞–π—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è! üïí`;

    const options = {
        reply_markup: {
            keyboard: [
                [{ text: '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è' }],
                [{ text: '–û –º–∞—Å—Ç–µ—Ä–µ üßë‚Äçüé®' }, { text: '–£—Å–ª—É–≥–∏ üíÖ' }, { text: '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Ö–æ–¥—É üß¥' }]
            ],
            resize_keyboard: true,
            one_time_keyboard: false,
        },
    };

    bot.sendMessage(chatId, welcomeMessage, options);
    userStates[chatId] = 'awaitingAction'; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const messageText = msg.text || '';

    if (messageText === '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è') {
        bot.sendMessage(chatId, 'üóì –ö–æ–≥–¥–∞ –≤–∞–º —É–¥–æ–±–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º? –ù–∞–ø–∏—à–∏—Ç–µ –ª—é–±—É—é —É–¥–æ–±–Ω—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è. üïí –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –º–∞—Å—Ç–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç –±—Ä–æ–Ω—å! üí¨ –ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –¥–ª—è –≤–∞—Å –∏–¥–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è. üòä');
        userStates[chatId] = 'awaitingBooking';
        return;
    }

    if (messageText === '–û –º–∞—Å—Ç–µ—Ä–µ üßë‚Äçüé®') {
        bot.sendMessage(chatId, 'üë©‚Äçüé® –ú–µ–Ω—è –∑–æ–≤—É—Ç –î–∞—à–∞, –∏ —è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –±—Ä–æ–≤–∏—Å—Ç —Å 5-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º! –Ø —Å–¥–µ–ª–∞—é –≤–∞—à–∏ –±—Ä–æ–≤–∏ –∏–¥–µ–∞–ª—å–Ω—ã–º–∏ –∏ –ø–æ–¥—á–µ—Ä–∫–Ω—É –≤–∞—à—É –ø—Ä–∏—Ä–æ–¥–Ω—É—é –∫—Ä–∞—Å–æ—Ç—É. üåü');
        return;
    }

    if (messageText === '–£—Å–ª—É–≥–∏ üíÖ') {
        bot.sendMessage(chatId, 'üíÑ –í–æ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö —É—Å–ª—É–≥:\n\n1. –ö–æ—Ä—Ä–µ–∫—Ü–∏—è –±—Ä–æ–≤–µ–π ‚Äî 1000 —Ä—É–±.\n2. –û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ –±—Ä–æ–≤–µ–π ‚Äî 1200 —Ä—É–±.\n3. –õ–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—Ä–æ–≤–µ–π ‚Äî 1500 —Ä—É–±.\n4. –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –±—Ä–æ–≤–µ–π ‚Äî 2000 —Ä—É–±.\n5. –î–æ–ª–≥–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —É–∫–ª–∞–¥–∫–∞ –±—Ä–æ–≤–µ–π ‚Äî 1800 —Ä—É–±.');
        return;
    }

    if (messageText === '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Ö–æ–¥—É üß¥') {
        bot.sendMessage(chatId, '‚ú® –ü–æ—Å–ª–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –≤–∞–∂–Ω–æ —É—Ö–∞–∂–∏–≤–∞—Ç—å –∑–∞ –±—Ä–æ–≤—è–º–∏. –í–æ—Ç –º–æ–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n\n1. –ù–µ –º–æ—á–∏—Ç–µ –±—Ä–æ–≤–∏ –ø–µ—Ä–≤—ã–µ 24 —á–∞—Å–∞. üö´üíß\n2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–µ –º–∞—Å–ª–∞ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –±–ª–µ—Å–∫–∞. üíÜ‚Äç‚ôÄÔ∏è\n3. –†–µ–≥—É–ª—è—Ä–Ω–æ —Ä–∞—Å—á–µ—Å—ã–≤–∞–π—Ç–µ –±—Ä–æ–≤–∏ –¥–ª—è –ø—Ä–∏–¥–∞–Ω–∏—è —Ñ–æ—Ä–º—ã. üßñ‚Äç‚ôÄÔ∏è');
        return;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø–∏—Å–∏
    if (userStates[chatId] === 'awaitingBooking') {
        saveBooking(chatId, messageText);

        const { userName, userLink } = await getUserProfile(chatId);

        bot.sendMessage(chatId, `üì© –í–∞—à–∞ –∑–∞–ø–∏—Å—å –ø–æ–ª—É—á–µ–Ω–∞: "${messageText}". üì® –ú–∞—Å—Ç–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. –°–ø–∞—Å–∏–±–æ! üôå`);
        bot.sendMessage(adminChatId, `–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userName} (ID: ${chatId})\n–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å: ${userLink}\n–°–æ–æ–±—â–µ–Ω–∏–µ: "${messageText}".`);

        userStates[chatId] = 'awaitingAction'; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª
function saveBooking(chatId, messageText) {
    const booking = { chatId, message: messageText };

    fs.appendFile('bookings.json', JSON.stringify(booking) + '\n', (err) => {
        if (err) throw err;
        console.log('–ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!');
    });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /list –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–ø–∏—Å–µ–π
bot.onText(/\/list/, (msg) => {
    const chatId = msg.chat.id;

    fs.readFile('bookings.json', 'utf8', (err, data) => {
        if (err) {
            bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π.');
            return;
        }

        const bookings = data.trim().split('\n').map(line => {
            try {
                return JSON.parse(line);
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —Å—Ç—Ä–æ–∫–∏:', line);
                return null;
            }
        }).filter(booking => booking !== null);

        const userBookings = bookings.filter(booking => booking.chatId === chatId);

        if (userBookings.length > 0) {
            const response = userBookings.map(booking => `üìã –ó–∞–ø–∏—Å—å: ${booking.message}`).join('\n');
            bot.sendMessage(chatId, `–í–∞—à–∏ –∑–∞–ø–∏—Å–∏:\n${response}`);
        } else {
            bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π.');
        }
    });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('polling_error', (error) => {
    console.log('–û—à–∏–±–∫–∞ polling:', error);
});
